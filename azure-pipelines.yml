trigger:
- master

schedules:
- cron: "0 4 * * *"
  displayName: "Daily build at midnight EDT"
  branches:
    include:
    - master
  always: true

jobs:
  - job: All
    timeoutInMinutes: 180 # 3 hours
    pool:
      vmImage: ubuntu-latest
    steps:
    - script: |
        set -euo pipefail
        mkdir -p "${HOME}/.docker/cli-plugins"
        DOCKER_LOCK_VERSION="$(git ls-remote https://github.com/michaelperel/docker-lock | grep refs/tags | grep -oE "[0-9]+\.[0-9]+\.[0-9]+$" | sort --version-sort | tail -n 1)"
        curl -fsSL "https://github.com/safe-waters/docker-lock/releases/download/v${DOCKER_LOCK_VERSION}/docker-lock_${DOCKER_LOCK_VERSION}_Linux_x86_64.tar.gz" | tar -xz -C "${HOME}/.docker/cli-plugins"
        chmod +x "${HOME}/.docker/cli-plugins/docker-lock"
      displayName: install docker-lock

    - script: |
        set -euo pipefail
        curl -fsSL https://github.com/docker/buildx/releases/download/v0.4.2/buildx-v0.4.2.linux-amd64 -o "${HOME}/.docker/cli-plugins/docker-buildx"
        chmod +x "${HOME}/.docker/cli-plugins/docker-buildx"
      displayName: install docker buildx

    - script: docker lock rewrite
      displayName: rewrite base images

    - task: Docker@2
      displayName: login
      inputs:
        command: login
        containerRegistry: docker-registry

    - script: |
        set -euo pipefail
        export DOCKER_CLI_EXPERIMENTAL=enabled
        export DOCKER_BUILDKIT=1
        sudo service docker restart
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker buildx create --use
        docker buildx build -f .devcontainer/Dockerfile --platform linux/arm64,linux/amd64 -t mperel/dev-container .devcontainer
      condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
      displayName: build

    - script: |
        set -euo pipefail
        export DOCKER_CLI_EXPERIMENTAL=enabled
        export DOCKER_BUILDKIT=1
        sudo service docker restart
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker buildx create --use
        docker buildx build --push -f .devcontainer/Dockerfile --platform linux/arm64,linux/amd64 -t mperel/dev-container .devcontainer
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
      displayName: build & push
